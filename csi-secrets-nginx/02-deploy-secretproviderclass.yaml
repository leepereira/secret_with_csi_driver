#Deploy a SecretProviderClass
#export NAMESPACE=ingress-test
#kubectl create ns $NAMESPACE
#export TENANT_ID=6116b87c-7a05-4a0b-926f-242269efe3c4

#Be sure to use objectType=secret, which is the only way to obtain the private key and the certificate from AKV.
#Set kubernetes.io/tls as the type in your secretObjects section.

# helm repo add csi-secrets-store-provider-azure https://raw.githubusercontent.com/Azure/secrets-store-csi-driver-provider-azure/master/charts
# helm install csi csi-secrets-store-provider-azure/csi-secrets-store-provider-azure

apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: azure-tls
spec:
  provider: azure
  secretObjects:                            # secretObjects defines the desired state of synced K8s secret objects
  - secretName: ingress-tls-csi
    type: kubernetes.io/tls
    data: 
    - objectName: $CERT_NAME
      key: tls.key
    - objectName: $CERT_NAME
      key: tls.crt
  parameters:
    usePodIdentity: "false"
    keyvaultName: $AKV_NAME                 # the name of the AKV instance
    objects: |
      array:az aks get-credentials --resource-group rg02 --name leonsaks01
        - |
          objectName: $CERT_NAME
          objectType: secret                
    tenantId: $TENANT_ID                    # the tenant ID of the AKV instance


#kubectl apply -f 02-deploy-secretproviderclass.yaml  -n $NAMESPACE 
